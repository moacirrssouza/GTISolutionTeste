@using PagedList;
@using PagedList.Mvc;
@model PagedList.IPagedList<WebMVC.Models.ClienteViewModel>

@{
    ViewBag.Title = "Clientes";
}

<div class="row mb-3">
    <div class="col-md-6">
        <h2 class="text-primary">Lista de Clientes</h2>
    </div>
    <div class="col-md-6 text-right">
        @Html.ActionLink("Novo Cliente", "NovoCliente", null, new { @class = "btn btn-sm btn-success" })
    </div>
</div>

<div class="table-responsive">
    <table class="table table-hover table-striped table-bordered">
        <thead class="bg-primary text-white">
            <tr>
                <th>@Html.DisplayNameFor(model => model[0].CPF)</th>
                <th>@Html.DisplayNameFor(model => model[0].Nome)</th>
                <th>@Html.DisplayNameFor(model => model[0].RG)</th>
                <th>@Html.DisplayNameFor(model => model[0].DataExpedicao)</th>
                <th>@Html.DisplayNameFor(model => model[0].OrgaoExpedicao)</th>
                <th>@Html.DisplayNameFor(model => model[0].UF)</th>
                <th>@Html.DisplayNameFor(model => model[0].Sexo)</th>
                <th>@Html.DisplayNameFor(model => model[0].EstadoCivil)</th>
                <th class="text-center">Ações</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr>
                    <td>@Html.DisplayFor(modelItem => item.CPF)</td>
                    <td>@Html.DisplayFor(modelItem => item.Nome)</td>
                    <td>@Html.DisplayFor(modelItem => item.RG)</td>
                    <td>@Html.DisplayFor(modelItem => item.DataExpedicao)</td>
                    <td>@Html.DisplayFor(modelItem => item.OrgaoExpedicao)</td>
                    <td>@Html.DisplayFor(modelItem => item.UF)</td>
                    <td>@Html.DisplayFor(modelItem => item.Sexo)</td>
                    <td>@Html.DisplayFor(modelItem => item.EstadoCivil)</td>
                    <td class="text-center">
                        <div class="btn-group btn-group-sm">
                            @Html.ActionLink("Editar", "AlterarCliente", new { id = item.ClienteId }, new { @class = "btn btn-sm btn-primary" })
                            @Html.ActionLink("Detalhes", "DetaheCliente", new { id = item.ClienteId }, new { @class = "btn btn-sm btn-info" })

                            @using (Html.BeginForm("ExcluirCliente", "Cadastro", new { id = item.ClienteId }, FormMethod.Post, new { style = "display:inline;", onsubmit = "return confirm('Deseja realmente deletar este contato ?');" }))
                            {
                                <button type="submit" class="btn btn-sm btn-danger">Deletar</button>
                            }
                        </div>
                    </td>

                </tr>
            }
        </tbody>
    </table>
</div>

<nav aria-label="Navegação de páginas">
    <ul class="pagination">
        @if (Model.HasPreviousPage)
        {
            <li>@Html.ActionLink("« Primeiro", "Index", new { pagina = 1 })</li>
            <li>@Html.ActionLink("‹ Anterior", "Index", new { pagina = Model.PageNumber - 1 })</li>
        }
        else
        {
            <li class="disabled"><span>« Primeiro</span></li>
            <li class="disabled"><span>‹ Anterior</span></li>
        }

        <li class="disabled">
            <span>
                Página @(Model.PageNumber) de @Model.PageCount
            </span>
        </li>

        @if (Model.HasNextPage)
        {
            <li>@Html.ActionLink("Próxima ›", "Index", new { pagina = Model.PageNumber + 1 })</li>
            <li>@Html.ActionLink("Última »", "Index", new { pagina = Model.PageCount })</li>
        }
        else
        {
            <li class="disabled"><span>Próxima ›</span></li>
            <li class="disabled"><span>Última »</span></li>
        }
    </ul>
</nav>